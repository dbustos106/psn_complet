upstream psn_wa_node {
    server psn-wa-service.loadbalancer.dns:4600;
}

server {
    listen 80;
    listen 443 ssl;
    ssl_certificate /etc/nginx/certificate.crt;
    ssl_certificate_key /etc/nginx/private.key;

    proxy_buffers 64 16k;
    proxy_max_temp_file_size 1024m;
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;
    
    location ~ /\. {
        deny all;
    }

    location ~* ^.+\.(rb|log)$ {
        deny all;
    }

    # serve static (compiled) assets directly if they exist (for node production)
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
        try_files $uri @psn_wa_node;

        access_log off;
        gzip_static on; # to serve pre-gzipped version

        expires max;
        add_header Cache-Control public;

        # Some browsers still send conditional-GET requests if there's a
        # Last-Modified header or an ETag header even if they haven't
        # reached the expiry date sent in the Expires header.
        add_header Last-Modified "";
        add_header ETag "";
        break;
    }

    location / {
        try_files $uri $uri/ @psn_wa_node;
    }

    location @psn_wa_node {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://psn_wa_node;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        access_log /var/www/psn_wa/log/nginx.access.log;
        error_log /var/www/psn_wa/log/nginx.error.log;
    }
}